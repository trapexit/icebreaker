/****************************************************************************************//*                                       PlayMusic.h                                    *//****************************************************************************************//*          (c) 1995 by Magnet Interactive Studios, inc. All rights reserved.           *//****************************************************************************************//*  Revision History:                                                                   *//*          2/17/95   File first created, based on PBMS.H, originally                   *//*                    written by Mark Emon. New version by Andrew Looney.               *//*  v4.1    2/22/95   New CD-ROM with rough draft of full interface. By Andrew Looney.  *//*  v4.2    3/17/95   The St. Patrick's Day Version. By Andrew Looney.                  *//*  v4.5    3/22/95   Second version with movies integrated. By Andrew Looney.          *//*  v5.2    3/29/95   Could this be the final version? By Andrew Looney.                *//*  v5.3    3/30/95   OK, now maybe THIS is the final version! By Andrew Looney.        *//*  v5.4     4/3/95   Made a couple more minor changes. By Andrew Looney.               *//*  v5.5	    5/4/95	 Music numbers revised due to addition of Panasonic logo to stream.*//****************************************************************************************/#ifndef _TYPES_H#include "Types.h"#endif#include "DataStreamLib.h"#ifndef _DSSTREAMHEADER_H_#include "DSStreamHeader.h"#endif#include "DataAcq.h"#include "SAudioSubscriber.h"#include "ControlSubscriber.h"#include "JoinSubscriber.h"#include <CPakSubscriber.h>#include "DataStreamDebug.h"/**************************************//* Internal player context descriptor *//**************************************/typedef struct Player{	DSHeaderChunk		hdr;							// Copy of stream header from stream file	DSDataBufPtr		bufferList;					// ptr to linked list of buffers used by															// streamer	AcqContextPtr		acqContext;					// ptr to data acquisition thread's context	DSStreamCBPtr		streamCBPtr;				// ptr to stream thread's context	Item					VBLIOReq;					// ioreq for calling WaitVBL()	Item					messagePort;				// port for receiving end of stream message	Item					messageItem;				// msg item for sending streamer requests	Item					endOfStreamMessageItem; // msg item that is replied to as end of															// stream	CPakContextPtr		cinepakContextPtr;		// Cinepak subscriber context ptr	CPakRecPtr 		   cinepakChannelPtr;		// Cinepak channel pointer.	CtrlContextPtr		controlContextPtr;		// Control subscriber context ptr	SAudioContextPtr	audioContextPtr;			// Audio subscriber context ptr	CCB					*buffer;			} Player, *PlayerPtr;/******************  FetchBackground Music and stuffName  *******************************/// ice.weave1	#define QUACK 						98304			/* Quack.aiff */#define CHECK_THIS_OUT_TALK	589824		/* CheckThisOutTalk.aiff has been replaced memon*/#define MADONNA 					1376256		/* Madonna.aiff */#define SPACE_AGE					1835008		/* SpaceAge.aiff */#define SOUND_OF_TALK_OLD		2686976		/* SoundofTalk.aiff */#define LOTS_OF_PERC_OLD		3538944		/* LotsofPerc.aiff */#define DRUNK_TRUMPET			3997696		/* DrunkTrumpet.aiff */#define MONKEY						4456448		/* Monkey.aiff */// ice.weave2#define THE_LONGER_ONE			5373952		/* TheLongerOne.aiff */#define MORE_QUACK				6160384		/* MoreQuack.aiff */#define SEVENTIES2				7143424		/* Seventies2.aiff */#define SHAFT						7929856		/* New loops from Marcus */#define HIT_ME						9175040#define WATER_WORKS				10420224#define FAST_HUNT					11665408		/* New loops from Mo */#define G_BOUNCE					12910592 // ice.weave3#define SCHICK						14155776 #define BALI						15400960#define ICE_OPEN_MUSIC			16646144	//ice.weave4#define SOUND_OF_TALK 			54853632		/* LastMinLoop1.aiff */#define LOTS_OF_PERC 			55738368		/* LastMinLoop3.aiff */#define TOTAL_TRACKS		19			/* the total number of looping music tracks available */#define START_MENU_MUSIC StartBgndMusic(ICE_OPEN_MUSIC) #define START_THE_MUSIC  StartBgndMusic(PickBackgrndMusic())#define STOP_THE_MUSIC   DSStopStream (ctx.messageItem, (struct DSRequestMsg *) NULL, \                                       ctx.streamCBPtr, SOPT_FLUSH)extern void				StartBgndMusic(unsigned long marker_num);extern unsigned long	PickBackgrndMusic();extern int32			InitFromStreamHeader(char* streamFileName );extern void				initSoundStream(void);extern int32			PlayVideoStream(int position);extern void				DismantlePlayer(void);/************************************** EOF *********************************************/